Given two words A and B, find the minimum number of steps required to convert A to B. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

Insert a character
Delete a character
Replace a character
Example : 
edit distance between
"Anshuman" and "Antihuman" is 2.

Operation 1: Replace s with t.
Operation 2: Insert i.

######################################################

int Solution::minDistance(string A, string B) {

    
//three type of operation. insert operation 
//if a[i] dont match with b[i] than 
//insert elemtn at A...SO a index will be same and we moved to b+1 MINDISTENC(A,B+1)
    int m=A.size();
    int n=B.size();
    vector<vector<int> > dp(m+1, vector<int>(n+1,0));
    
  
    
    for(int i=0;i<=m;i++)
    {
        for(int j=0;j<=n;j++)
        {
            
            //if(i==0&&j==0){
              //  dp[i][j]=0;
               // continue;
            //} 
            
            if(i==0 ){dp[i][j]=j;
                continue;
            }
            
            if(j==0){
                dp[i][j]=i;
                continue;
            }
            
            if(A[i-1]==B[j-1])
               dp[i][j]=dp[i-1][j-1];
            
            else
             dp[i][j]= min(min(dp[i-1][j],dp[i][j-1]),dp[i-1][j-1]) +1;
           
        }
        
       
    }
    
     return dp[m][n];
}
