/****
Given a binary tree, find its maximum depth.

The maximum depth of a binary tree is the number of nodes along the longest path from the root node down to the farthest leaf node.

 NOTE : The path has to end on a leaf node. 
Example :

         1
        /
       2
max depth = 2.
**/



/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int Solution::maxDepth(TreeNode* A) {
    // max depth of tree it is max of left or right subtree+1
    if(A==NULL)return 0;
    
    if(A->left==NULL && A->right==NULL)
     return 1;
     
    if(A->left==NULL)
       return maxDepth(A->right) +1;
       
    if(A->right==NULL)
      return maxDepth(A->left) +1;
      
    return max(maxDepth(A->left), maxDepth(A->right)) +1;  
}
